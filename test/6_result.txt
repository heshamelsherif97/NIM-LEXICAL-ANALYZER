4INT_LIT  3
  ,   DIGIT  3

46INT_LIT  0
  ,   FLOAT_LIT  0.0

47DOT  .
  ,   VARIABLE  var

48INT_LIT  0
  ,   IDENTIFIER  f32

49VARIABLE  var
  ,   EQUALS_OPERATOR  =

50IDENTIFIER  f32
  ,   FLOAT32_LIT  0.0'f32

51EQUALS_OPERATOR  =
  ,   VARIABLE  var

52INT_LIT  0
  ,   IDENTIFIER  f64

53DOT  .
  ,   EQUALS_OPERATOR  =

54INT_LIT  0
  ,   FLOAT64_LIT  0.0'f64

55CHAR_LIT  'f32  # float32
  ,   IDENTIFIER  assert

56var  f64 = 0.0'
  ,   INT_LIT  0b11111111

57IDENTIFIER  f64
  ,   EQUALS_OPERATOR  ==

58IDENTIFIER  assert
  ,   INT_LIT  255

59INT_LIT  0b1
  ,   IDENTIFIER  assert

60INT_LIT  1111111
  ,   INT_LIT  0o377

61EQUALS_OPERATOR  =
  ,   EQUALS_OPERATOR  ==

62EQUALS_OPERATOR  =
  ,   INT_LIT  255

63INT_LIT  255
  ,   IDENTIFIER  assert

64IDENTIFIER  assert
  ,   INT_LIT  0xff

65INT_LIT  0o3
  ,   EQUALS_OPERATOR  ==

66INT_LIT  77
  ,   INT_LIT  255

67EQUALS_OPERATOR  =
  ,   IDENTIFIER  assert

68EQUALS_OPERATOR  =
  ,   FLOAT64_LIT  0b0_10001110100_0000101001000111101011101111111011000101001101001001'f64

69INT_LIT  255
  ,   EQUALS_OPERATOR  ==

70IDENTIFIER  assert
  ,   FLOAT_LIT  1.7282561e+35

71INT_LIT  0
  ,   IDENTIFIER  assert

72IDENTIFIER  xff
  ,   INT_LIT  1_999_999

73EQUALS_OPERATOR  =
  ,   EQUALS_OPERATOR  ==

74EQUALS_OPERATOR  =
  ,   INT_LIT  1999999

INT_LIT  255
  ,   EXTRA
IDENTIFIER  assert
  ,   EXTRA
INT_LIT  0b0_1
  ,   EXTRA
INT_LIT  0001110100
  ,   EXTRA
INT_LIT  0000101001000111101011101111111011000101001101001001
  ,   EXTRA
