token literal names:
null
null
null
null
null
null
null
'var'
'and'
'addr'
'as'
'asm'
'end'
'from'
'bind'
'block'
'break'
'case'
'cast'
'concept'
'const'
'continue'
'converter'
'defer'
'discard'
'distinct'
'div'
'do'
'elif'
'else'
'enum'
'except'
'export'
'finally'
'for'
'func'
'if'
'import'
'in'
'include'
'interface'
'is'
'isnot'
'iterator'
'let'
'macro'
'method'
'mixin'
'mod'
'nil'
'not'
'notin'
'object'
'of'
'or'
'out'
'proc'
'ptr'
'raise'
'ref'
'return'
'shl'
'shr'
'static'
'template'
'try'
'tuple'
'type'
'using'
'when'
'while'
'xor'
'yield'
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
'+'
'*'
'-'
'/'
'~'
'&'
'|'
'<'
'>'
'@'
'%'
'!'
'^'
'.'
':'
'('
')'
'{'
'}'
'['
']'
','
';'
null
null
null
null

token symbolic names:
null
COMMENT3
COMMENT2
COMMENT
EMPTYSTR
INDENT
EMPTYSTR2
VARIABLE
ANDD
ADDR
ASS
ASM
END
FROM
BIND
BLOCK
BREAKK
CASE
CAST
CONCEPT
CONST
CONTINUEE
CONVERTER
DEFER
DISCARD
DISTINCT
DIV
DO
ELIFF
ELSEE
ENUM
EXCEPTT
EEXPORT
FINALLYY
FORR
FUNC
IFF
IIMPORT
INN
INCLUDE
INTERFACE
ISS
ISNOT
ITERATOR
LET
MACRO
METHOD
MIXIN
MOD
NIL
NOTT
NOTIN
OBJECTT
OF
ORR
OUT
PROC
PTR
RAISEE
REF
RETURNN
SHL
SHR
STATIC
TEMPLATE
TRYY
TUPLEE
TYPEE
USING
WHEN
WHILEE
XOR
YIELDD
IDENTIFIER
LETTER
DIGIT
INT8_LIT
INT16_LIT
INT32_LIT
INT64_LIT
UINT_LIT
UINT8_LIT
UINT16_LIT
UINT32_LIT
UINT64_LIT
EXP
FLOAT32_SUFFIX
FLOAT32_LIT
FLOAT64_LIT
FLOAT_LIT
FLOAT64_SUFFIX
INT_LIT
HEX_LIT
DEC_LIT
OCT_LIT
BIN_LIT
EQUALS_OPERATOR
ADD_OPERATOR
MUL_OPERATOR
MINUS_OPERATOR
DIV_OPERATOR
BITWISE_NOT_OPERATOR
AND_OPERATOR
OR_OPERATOR
LESS_THAN
GREATER_THAN
AT
MODULUS
NOT_OPERATOR
XOR_OPERATOR
DOT
COLON
OPEN_PAREN
CLOSE_PAREN
OPEN_BRACE
CLOSE_BRACE
OPEN_BRACK
CLOSE_BRACK
COMMA
SEMI_COLON
STR_LIT
CHAR_LIT
TRIPLESTR_LIT
RSTR_LIT

rule names:
start


atn:
[3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 3, 125, 7, 4, 2, 9, 2, 3, 2, 3, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 5, 2, 4, 3, 2, 2, 2, 4, 5, 7, 77, 2, 2, 5, 3, 3, 2, 2, 2, 2]